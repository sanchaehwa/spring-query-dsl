plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'study'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	implementation 'org.springframework.data:spring-data-commons'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def querydslDir = "$buildDir/generated/querydsl"

configurations {
	querydsl.extendsFrom compileClasspath
}

sourceSets {
	main {
		java {
			srcDirs += querydslDir
		}
	}
}

task compileQuerydsl(type: JavaCompile) {
	group = "build"
	description = "Generate QueryDSL Q-type classes"
	source = sourceSets.main.java
	classpath = configurations.querydsl
	destinationDir = file(querydslDir)
	options.annotationProcessorPath = configurations.querydsl
}

clean {
	delete querydslDir
}

tasks.named('test') {
	useJUnitPlatform()
}
